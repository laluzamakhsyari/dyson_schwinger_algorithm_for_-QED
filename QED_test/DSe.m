(* ::Package:: *)

(* ::Input:: *)
(*(*the momentum/vector dependent-functions*)*)
(*(*don't forget that the important thing is the variables momentum 1 and momentum 2 MUST be in the form of coulumn matrix in the right side (components of 4 vector)*)*)
(**)
(*Vmu[barpsi_,psi_]:=Table[Simplify[barpsi. GammaMat[i].psi],{i,0,3}] *)
(*u[level_,P_,bmu_,psi_]:=Which[level!= Length[num]-1,(slash[(P)]+m identity).slash[bmu].psi,level==Length[num]-1,slash[bmu].psi]*)
(*ubar[level_,P_,bmu_,barpsi_]:=Which[level!= Length[num]-1,barpsi.slash[bmu].(slash[P]-m identity),level==Length[num]-1,barpsi.slash[bmu]]*)
(*prop[P_]:=(-I/(Sp[P,P]-m))identity;*)
(**)
(*(* boson and spinor*)*)
(*bosonmu[level_,P_,barpsi_,psi_]:=Which[level!= Length[num]-1,I g prop[P].Vmu[barpsi,psi],level ==Length[num]-1,I g Vmu[barpsi,psi]]*)
(*bosonmuLC[level_,P_,barpsi_,psi_]:=Which[level!=Length[num]-1,I g prop[P].LC[Vmu[barpsi,psi]],level==Length[num]-1,I g LC[Vmu[barpsi,psi]]]*)
(*fermion[level_,P_,bmu_,psi_]:=Which[level!= Length[num]-1,-I g prop[P]. u[level,P,bmu,psi],level==Length[num]-1,-I g u[level,P,bmu,psi]]*)
(*antifermion[level_,P_,bmu_,barpsi_]:=Which[level!= Length[num]-1, I g  ubar[level,P,bmu,barpsi].prop[P],level==Length[num]-1,I g  ubar[level,P,bmu,barpsi]]*)
