(* ::Package:: *)

(* ::Input:: *)
(*(*DSe Logic*)*)
(**)
(*logic1[flav_,one_,two_]:=If[bit[one,two]==0,{flav,Sort[{sum[one],sum[two]}]}]*)
(*logic2[level_,flav1_,flav2_,siji_,loro_,scalar1_,scalar2_]:=If[flav1+flav2==0,*)
(*Join[logic1[gamma,siji,loro],logicboson[level,flav1,flav2,siji,loro,scalar1,scalar2]],*)
(*Which[(flav1==gamma&&flav2!=gamma), Join[logic1[flav2,siji,loro],logicfaf2[level,flav1,flav2,siji,loro,scalar1,scalar2]],*)
(*(flav2==gamma&&flav1!=gamma),Join[logic1[flav1,siji,loro],logicfaf1[level,flav1,flav2,siji,loro,scalar1,scalar2]]]]*)
(**)
(*logicboson[level_,flav1_,flav2_,one_,two_,scalar1_,scalar2_]:=If[bit[one,two]==0,Reap[Do[Which[*)
(*(flav1==muminus||flav1==eminus),*)
(*Which[*)
(*(bit[one,num1[[i]]]!= 0)||(bit[two,num1[[i]]]!= 0),*)
(*Sow[bosonmuLC[level,p[one,two]-2momm[sum[num1[[i]]]],scalar1,scalar2](-1)epsilon[two,one]],*)
(*bit[one,num1[[i]]]!= 0&&bit[two,num1[[j]]]!= 0&&bit[num1[[i]],num1[[j]]]== 0,*)
(*Sow[bosonmuLC[level,p[one,two]-2momm[sum[num1[[i]]]+sum[num1[[j]]]],scalar1,scalar2](-1)epsilon[two,one]],*)
(*True,*)
(*Sow[bosonmuLC[level,p[one,two],scalar1,scalar2](-1)epsilon[two,one]]*)
(*],*)
(*(flav1== muplus||flav1==eplus),*)
(*Which[*)
(*(bit[one,num1[[i]]]!= 0)||(bit[two,num1[[i]]]!= 0),*)
(*Sow[bosonmuLC[level,p[one,two]-2momm[sum[num1[[i]]]],scalar2,scalar1](-1)epsilon[one,two]],*)
(*bit[one,num1[[i]]]!= 0&&bit[two,num1[[j]]]!= 0&&bit[num1[[i]],num1[[j]]]== 0,*)
(*Sow[bosonmuLC[level,p[one,two]-2momm[sum[num1[[i]]]+sum[num1[[j]]]],scalar2,scalar1](-1)epsilon[one,two]],*)
(*True,*)
(*Sow[bosonmuLC[level,p[one,two],scalar2,scalar1](-1)epsilon[one,two]]*)
(*]*)
(*]//Chop,{i,1,numinput-1,1},{j,1,numinput-1,1}]][[2,1]],Nothing]*)
(**)
(*logicfaf2[level_,flav1_,flav2_,one_,two_,scalar1_,scalar2_]:=If[bit[one,two]==0,Reap[Do[*)
(*Which[flav2==eminus||flav2==muminus,*)
(*Which[(bit[one,num1[[i]]]!= 0)||(bit[two,num1[[i]]]!= 0),*)
(*Sow[antifermion[level,p[one,two]-2momm[sum[num1[[i]]]],LCI[scalar1],scalar2]epsilon[one,two]],*)
(*bit[one,num1[[i]]]!= 0&&bit[two,num1[[j]]]!= 0&&bit[num1[[i]],num1[[j]]]== 0,*)
(*Sow[antifermion[level,p[one,two]-2momm[sum[num1[[i]]]+sum[num1[[j]]]],LCI[scalar1],scalar2]epsilon[one,two]],*)
(*True,*)
(*Sow[antifermion[level,p[one,two],LCI[scalar1],scalar2]epsilon[one,two]]*)
(*],*)
(*flav2==eplus||flav2==muplus,*)
(*Which[(bit[one,num1[[i]]]!= 0)||(bit[two,num1[[i]]]!= 0),*)
(*Sow[fermion[level,p[one,two]-2momm[sum[num1[[i]]]],LCI[scalar1],scalar2]epsilon[one,two]],*)
(*bit[one,num1[[i]]]!= 0&&bit[two,num1[[j]]]!= 0&&bit[num1[[i]],num1[[j]]]== 0,*)
(*Sow[fermion[level,p[one,two]-2momm[sum[num1[[i]]]+sum[num1[[j]]]],LCI[scalar1],scalar2]epsilon[flav2,flav1,sum[two],sum[one]]],*)
(*True,*)
(*Sow[fermion[level,p[one,two],LCI[scalar1],scalar2]epsilon[two,one]]*)
(*]*)
(*]//Chop,{i,1,numinput-1,1},{j,1,numinput-1,1}]][[2,1]],Nothing]*)
(**)
(*logicfaf1[level_,flav1_,flav2_,one_,two_,scalar1_,scalar2_]:=If[bit[one,two]==0,Reap[Do[*)
(*Which[flav1==eminus||flav1==muminus,*)
(*Which[(bit[one,num1[[i]]]!= 0)||(bit[two,num1[[i]]]!= 0),*)
(*Sow[antifermion[level,p[one,two]-2momm[sum[num1[[i]]]],LCI[scalar2],scalar1]epsilon[one,two]],*)
(*bit[one,num1[[i]]]!= 0&&bit[two,num1[[j]]]!= 0&&bit[num1[[i]],num1[[j]]]== 0,*)
(*Sow[antifermion[level,p[one,two]-2momm[sum[num1[[i]]]+sum[num1[[j]]]],LCI[scalar2],scalar1]epsilon[two,one]],*)
(*True,*)
(*Sow[antifermion[level,p[one,two],LCI[scalar2],scalar1]epsilon[one,two]]*)
(*],*)
(*flav1==eplus||flav1==muplus,*)
(*Which[(bit[one,num1[[i]]]!= 0)||(bit[two,num1[[i]]]!= 0),*)
(*Sow[fermion[level,p[one,two]-2momm[sum[num1[[i]]]],LCI[scalar2],scalar1]epsilon[one,two]],*)
(*bit[one,num1[[i]]]!= 0&&bit[two,num1[[j]]]!= 0&&bit[num1[[i]],num1[[j]]]== 0,*)
(*Sow[fermion[level,p[one,two]-2momm[sum[num1[[i]]]+sum[num1[[j]]]],LCI[scalar2],scalar1]epsilon[one,two]],*)
(*True,*)
(*Sow[fermion[level,p[one,two],LCI[scalar2],scalar1]epsilon[one,two]]*)
(*]*)
(*]//Chop,{i,1,numinput-1,1},{j,1,numinput-1,1}]][[2,1]],Nothing]*)
