(* ::Package:: *)

(* ::Input:: *)
(*Length[flv];*)
(*numinput=2;*)
(*numouput=Length[flv]-numinput;*)
(*checkflv=If[Sum[If[flv[[i]]==gamma,0,flv[[i]]],{i,1,numinput}]==Sum[If[flv[[i]]==gamma,0,flv[[i]]],{i,numinput+1,Length[flv]}],True, False];*)
(*flv1=Join[Table[ If[flv[[i]]!= gamma,flv[[i]](-1),flv[[i]]],{i,2,numinput}],Table[flv[[j]],{j,numinput+1,Length[flv]}]];*)
(*gammapos=Flatten[Position[flv1,gamma]];*)
(*num =Function[{x},2^(x-1)]@Range[Length[flv]];*)
(*num1=Function[{x},2^(x)]@Range[Length[flv1]];*)
(*ingoing=Table[flv[[i]],{i,numinput}];*)
(*outgoing=Table[flv[[i]],{i,numinput+1,Length[num]}];*)
(*checktype=Reap[Do[Which[flv[[j]]==gamma,Sow[0],(flv[[j]]==eminus&&j<= numinput||flv[[j]]==muminus&&j<= numinput),Sow[1],(flv[[j]]==eplus&&j<= numinput||flv[[j]]==muplus&&j<= numinput),Sow[-1],(flv[[j]]==eminus&&j>numinput||flv[[j]]==muminus&&j>numinput),Sow[-1],(flv[[j]]==eplus&&j>numinput||flv[[j]]==muplus&&j>numinput),Sow[1]],{j,1, Length[flv],1}]][[2,1]]; (*1=ingoing fermion,-1=incoming antifermion, -1=outgoing fermion, 1=outgoing antifermion*)*)
(*polsign=Tuples[{1,2},Length[num]];*)
